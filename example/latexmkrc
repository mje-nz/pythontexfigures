#!/usr/bin/env perl
#(shebang is for syntax highlighting)

# Always generate PDF using pdflatex
$pdf_mode = 1;


###############################################################################
#                              PythonTeX support                              #
###############################################################################

# Paths (pythontex_figures parses this file to find these)
my $pythontex_scripts_dir = 'scripts';
my $pythontex_data_dir = 'data';

# Delete PythonTeX generated files on latexmk -c
$clean_ext .= ' pythontex-files-%R/* pythontex-files-%R';
push @generated_exts, 'pytxcode';

# Add rule to process .pytxcode files (generated by pythontex.sty) using pythontex3.py
$extra_rule_spec{'pythontex'}  = ['internal', '', 'mypythontex', '%Y%R.pytxcode', '%Ypythontex-files-%R/%R.pytxmcr', '%R', 1];
sub mypythontex {
    # Run pythontex3.py without python2
    my $pythontex_command = 'python3 $(which pythontex) --interpreter python:python3 --verbose %O %S';
    my $ret = Run_subst($pythontex_command, 2);
    
    # Run this rule when any script in the scripts folder or any file in the data
    # folder is modified.  Newly created files will only be monitored after an
    # already-monitored file is modified (so this rule runs again).
    my @depend_files = glob("$pythontex_scripts_dir/*.py $pythontex_data_dir/*");
    foreach my $file (@depend_files){
        rdb_ensure_file($rule, $file);
        #print "Depending on $file\n";
    }

    # The latexmk PythonTeX example rcfile at 
    # http://mirror.aut.ac.nz/CTAN/support/latexmk/example_rcfiles/pythontex-latexmkrc
    # implies that PythonTeX prints dependency information in .pytxmcr files and uses
    # that to add dependencies, but as far as I can tell it doesn't and never has.
    # TODO: It's in py_default_default.out.
    return $ret;
}
